.TH wxGridSizer 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxGridSizer \- Functions for wxGridSizer class
.SH DESCRIPTION
.LP
A grid sizer is a sizer which lays out its children in a two-dimensional table with all table fields having the same size, i\&.e\&. the width of each field is the width of the widest child, the height of each field is the height of the tallest child\&.
.LP
See: \fIwxSizer\fR\&, Overview sizer 
.LP
This class is derived (and can use functions) from: \fIwxSizer\fR\&
.LP
wxWidgets docs: wxGridSizer
.SH DATA TYPES
.nf

\fBwxGridSizer()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new(Cols) -> wxGridSizer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Cols = integer()
.br
.RE
.RE
.LP
.nf

.B
new(Cols, Options :: [Option]) -> wxGridSizer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Cols = integer()
.br
Option = {gap, {W :: integer(), H :: integer()}}
.br
.RE
.RE
.RS
.RE
.LP
.nf

.B
new(Cols, Vgap, Hgap) -> wxGridSizer()
.br
.fi
.br
.nf

.B
new(Rows, Cols, Gap) -> wxGridSizer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Rows = Cols = integer()
.br
Gap = {W :: integer(), H :: integer()}
.br
.RE
.RE
.RS
.RE
.LP
.nf

.B
new(Rows, Cols, Vgap, Hgap) -> wxGridSizer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Rows = Cols = Vgap = Hgap = integer()
.br
.RE
.RE
.RS
.RE
.LP
.nf

.B
getCols(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
.RE
.RE
.RS
.LP
Returns the number of columns that has been specified for the sizer\&.
.LP
Returns zero if the sizer is automatically adjusting the number of columns depending on number of its children\&. To get the effective number of columns or rows being currently used, see \fIGetEffectiveColsCount()\fR\& (not implemented in wx)
.RE
.LP
.nf

.B
getHGap(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
.RE
.RE
.RS
.LP
Returns the horizontal gap (in pixels) between cells in the sizer\&.
.RE
.LP
.nf

.B
getRows(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
.RE
.RE
.RS
.LP
Returns the number of rows that has been specified for the sizer\&.
.LP
Returns zero if the sizer is automatically adjusting the number of rows depending on number of its children\&. To get the effective number of columns or rows being currently used, see \fIGetEffectiveRowsCount()\fR\& (not implemented in wx)\&.
.RE
.LP
.nf

.B
getVGap(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
.RE
.RE
.RS
.LP
Returns the vertical gap (in pixels) between the cells in the sizer\&.
.RE
.LP
.nf

.B
setCols(This, Cols) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
Cols = integer()
.br
.RE
.RE
.RS
.LP
Sets the number of columns in the sizer\&.
.RE
.LP
.nf

.B
setHGap(This, Gap) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
Gap = integer()
.br
.RE
.RE
.RS
.LP
Sets the horizontal gap (in pixels) between cells in the sizer\&.
.RE
.LP
.nf

.B
setRows(This, Rows) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
Rows = integer()
.br
.RE
.RE
.RS
.LP
Sets the number of rows in the sizer\&.
.RE
.LP
.nf

.B
setVGap(This, Gap) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGridSizer()
.br
Gap = integer()
.br
.RE
.RE
.RS
.LP
Sets the vertical gap (in pixels) between the cells in the sizer\&.
.RE
.LP
.nf

.B
destroy(This :: wxGridSizer()) -> ok
.br
.fi
.br
.RS
.LP
Destroys the object\&.
.RE