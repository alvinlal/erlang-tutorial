.TH wxRadioButton 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxRadioButton \- Functions for wxRadioButton class
.SH DESCRIPTION
.LP
A radio button item is a button which usually denotes one of several mutually exclusive options\&. It has a text label next to a (usually) round button\&.
.LP
You can create a group of mutually-exclusive radio buttons by specifying \fIwxRB_GROUP\fR\& for the first in the group\&. The group ends when another radio button group is created, or there are no more radio buttons\&.
.LP
Styles
.LP
This class supports the following styles:
.LP
See: Overview events, \fIwxRadioBox\fR\&, \fIwxCheckBox\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxControl\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxRadioButton
.SH "EVENTS"

.LP
Event types emitted from this class: \fIcommand_radiobutton_selected\fR\&
.SH DATA TYPES
.nf

\fBwxRadioButton()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxRadioButton()
.br
.fi
.br
.RS
.LP
Default constructor\&.
.LP
See: \fIcreate/5\fR\&, \fIwxValidator\fR\& (not implemented in wx)
.RE
.LP
.nf

.B
new(Parent, Id, Label) -> wxRadioButton()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
.RE
.RE
.LP
.nf

.B
new(Parent, Id, Label, Options :: [Option]) -> wxRadioButton()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()} |
.br
    {validator, wx:wx_object()}
.br
.RE
.RE
.RS
.LP
Constructor, creating and showing a radio button\&.
.LP
See: \fIcreate/5\fR\&, \fIwxValidator\fR\& (not implemented in wx)
.RE
.LP
.nf

.B
destroy(This :: wxRadioButton()) -> ok
.br
.fi
.br
.RS
.LP
Destructor, destroying the radio button item\&.
.RE
.LP
.nf

.B
create(This, Parent, Id, Label) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxRadioButton()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
.RE
.RE
.LP
.nf

.B
create(This, Parent, Id, Label, Options :: [Option]) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxRadioButton()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()} |
.br
    {validator, wx:wx_object()}
.br
.RE
.RE
.RS
.LP
Creates the choice for two-step construction\&.
.LP
See \fInew/4\fR\& for further details\&.
.RE
.LP
.nf

.B
getValue(This) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxRadioButton()
.br
.RE
.RE
.RS
.LP
Returns true if the radio button is checked, false otherwise\&.
.RE
.LP
.nf

.B
setValue(This, Value) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxRadioButton()
.br
Value = boolean()
.br
.RE
.RE
.RS
.LP
Sets the radio button to checked or unchecked status\&.
.LP
This does not cause a \fIwxEVT_RADIOBUTTON\fR\& event to get emitted\&.
.LP
If the radio button belongs to a radio group exactly one button in the group may be checked and so this method can be only called with \fIvalue\fR\& set to true\&. To uncheck a radio button in a group you must check another button in the same group\&.
.LP
Note: Under MSW, the focused radio button is always selected, i\&.e\&. its value is true\&. And, conversely, calling \fISetValue(true)\fR\& will also set focus to the radio button if the focus had previously been on another radio button in the same group - as otherwise setting it on wouldn\&'t work\&.
.RE