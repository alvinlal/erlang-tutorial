.TH wxFindReplaceData 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxFindReplaceData \- Functions for wxFindReplaceData class
.SH DESCRIPTION
.LP
\fIwxFindReplaceData\fR\& holds the data for \fIwxFindReplaceDialog\fR\&\&.
.LP
It is used to initialize the dialog with the default values and will keep the last values from the dialog when it is closed\&. It is also updated each time a \fIwxFindDialogEvent\fR\& (not implemented in wx) is generated so instead of using the \fIwxFindDialogEvent\fR\& (not implemented in wx) methods you can also directly query this object\&.
.LP
Note that all \fISetXXX()\fR\& methods may only be called before showing the dialog and calling them has no effect later\&.
.LP
wxWidgets docs: wxFindReplaceData
.SH DATA TYPES
.nf

\fBwxFindReplaceData()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxFindReplaceData()
.br
.fi
.br
.LP
.nf

.B
new(Options :: [Option]) -> wxFindReplaceData()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Option = {flags, integer()}
.br
.RE
.RE
.RS
.LP
Constructor initializes the flags to default value (0)\&.
.RE
.LP
.nf

.B
getFindString(This) -> unicode:charlist()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
.RE
.RE
.RS
.LP
Get the string to find\&.
.RE
.LP
.nf

.B
getReplaceString(This) -> unicode:charlist()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
.RE
.RE
.RS
.LP
Get the replacement string\&.
.RE
.LP
.nf

.B
getFlags(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
.RE
.RE
.RS
.LP
Get the combination of \fIwxFindReplaceFlags\fR\& values\&.
.RE
.LP
.nf

.B
setFlags(This, Flags) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
Flags = integer()
.br
.RE
.RE
.RS
.LP
Set the flags to use to initialize the controls of the dialog\&.
.RE
.LP
.nf

.B
setFindString(This, Str) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
Str = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Set the string to find (used as initial value by the dialog)\&.
.RE
.LP
.nf

.B
setReplaceString(This, Str) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxFindReplaceData()
.br
Str = unicode:chardata()
.br
.RE
.RE
.RS
.LP
Set the replacement string (used as initial value by the dialog)\&.
.RE
.LP
.nf

.B
destroy(This :: wxFindReplaceData()) -> ok
.br
.fi
.br
.RS
.LP
Destroys the object\&.
.RE