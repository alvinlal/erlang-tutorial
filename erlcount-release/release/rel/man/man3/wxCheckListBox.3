.TH wxCheckListBox 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxCheckListBox \- Functions for wxCheckListBox class
.SH DESCRIPTION
.LP
A \fIwxCheckListBox\fR\& is like a \fIwxListBox\fR\&, but allows items to be checked or unchecked\&.
.LP
When using this class under Windows wxWidgets must be compiled with wxUSE_OWNER_DRAWN set to 1\&.
.LP
See: \fIwxListBox\fR\&, \fIwxChoice\fR\&, \fIwxComboBox\fR\&, \fIwxListCtrl\fR\&, \fIwxCommandEvent\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxListBox\fR\& \fIwxControlWithItems\fR\& \fIwxControl\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxCheckListBox
.SH "EVENTS"

.LP
Event types emitted from this class: \fIcommand_checklistbox_toggled\fR\&
.SH DATA TYPES
.nf

\fBwxCheckListBox()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxCheckListBox()
.br
.fi
.br
.RS
.LP
Default constructor\&.
.RE
.LP
.nf

.B
new(Parent, Id) -> wxCheckListBox()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
.RE
.RE
.LP
.nf

.B
new(Parent, Id, Options :: [Option]) -> wxCheckListBox()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {choices, [unicode:chardata()]} |
.br
    {style, integer()} |
.br
    {validator, wx:wx_object()}
.br
.RE
.RE
.RS
.LP
Constructor, creating and showing a list box\&.
.RE
.LP
.nf

.B
destroy(This :: wxCheckListBox()) -> ok
.br
.fi
.br
.RS
.LP
Destructor, destroying the list box\&.
.RE
.LP
.nf

.B
check(This, Item) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxCheckListBox()
.br
Item = integer()
.br
.RE
.RE
.LP
.nf

.B
check(This, Item, Options :: [Option]) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxCheckListBox()
.br
Item = integer()
.br
Option = {check, boolean()}
.br
.RE
.RE
.RS
.LP
Checks the given item\&.
.LP
Note that calling this method does not result in a \fIwxEVT_CHECKLISTBOX\fR\& event being emitted\&.
.RE
.LP
.nf

.B
isChecked(This, Item) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxCheckListBox()
.br
Item = integer()
.br
.RE
.RE
.RS
.LP
Returns true if the given item is checked, false otherwise\&.
.RE