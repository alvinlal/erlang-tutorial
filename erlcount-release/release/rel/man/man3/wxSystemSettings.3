.TH wxSystemSettings 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxSystemSettings \- Functions for wxSystemSettings class
.SH DESCRIPTION
.LP
\fIwxSystemSettings\fR\& allows the application to ask for details about the system\&.
.LP
This can include settings such as standard colours, fonts, and user interface element sizes\&.
.LP
See: \fIwxFont\fR\&, \fIwx_color()\fR\&, \fIwxSystemOptions\fR\& 
.LP
wxWidgets docs: wxSystemSettings
.SH DATA TYPES
.nf

\fBwxSystemSettings()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
getColour(Index) -> wx:wx_colour4()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Index = wx:wx_enum()
.br
.RE
.RE
.RS
.LP
Returns a system colour\&.
.LP
Return: The returned colour is always valid\&.
.RE
.LP
.nf

.B
getFont(Index) -> wxFont:wxFont()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Index = wx:wx_enum()
.br
.RE
.RE
.RS
.LP
Returns a system font\&.
.LP
Return: The returned font is always valid\&.
.RE
.LP
.nf

.B
getMetric(Index) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Index = wx:wx_enum()
.br
.RE
.RE
.LP
.nf

.B
getMetric(Index, Options :: [Option]) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Index = wx:wx_enum()
.br
Option = {win, wxWindow:wxWindow()}
.br
.RE
.RE
.RS
.LP
Returns the value of a system metric, or -1 if the metric is not supported on the current system\&.
.LP
The value of \fIwin\fR\& determines if the metric returned is a global value or a \fIwxWindow\fR\& based value, in which case it might determine the widget, the display the window is on, or something similar\&. The window given should be as close to the metric as possible (e\&.g\&. a \fIwxTopLevelWindow\fR\& in case of the wxSYS_CAPTION_Y metric)\&.
.LP
\fIindex\fR\& can be one of the ?wxSystemMetric enum values\&.
.LP
\fIwin\fR\& is a pointer to the window for which the metric is requested\&. Specifying the \fIwin\fR\& parameter is encouraged, because some metrics on some ports are not supported without one,or they might be capable of reporting better values if given one\&. If a window does not make sense for a metric, one should still be given, as for example it might determine which displays cursor width is requested with wxSYS_CURSOR_X\&.
.RE
.LP
.nf

.B
getScreenType() -> wx:wx_enum()
.br
.fi
.br
.RS
.LP
Returns the screen type\&.
.LP
The return value is one of the ?wxSystemScreenType enum values\&.
.RE