.TH wxStaticLine 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxStaticLine \- Functions for wxStaticLine class
.SH DESCRIPTION
.LP
A static line is just a line which may be used in a dialog to separate the groups of controls\&.
.LP
The line may be only vertical or horizontal\&. Moreover, not all ports (notably not wxGTK) support specifying the transversal direction of the line (e\&.g\&. height for a horizontal line) so for maximal portability you should specify it as wxDefaultCoord\&.
.LP
Styles
.LP
This class supports the following styles:
.LP
See: \fIwxStaticBox\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxControl\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxStaticLine
.SH DATA TYPES
.nf

\fBwxStaticLine()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxStaticLine()
.br
.fi
.br
.RS
.LP
Default constructor\&.
.RE
.LP
.nf

.B
new(Parent) -> wxStaticLine()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
.RE
.RE
.LP
.nf

.B
new(Parent, Options :: [Option]) -> wxStaticLine()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Option = 
.br
    {id, integer()} |
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Constructor, creating and showing a static line\&.
.LP
See: \fIcreate/3\fR\& 
.RE
.LP
.nf

.B
create(This, Parent) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxStaticLine()
.br
Parent = wxWindow:wxWindow()
.br
.RE
.RE
.LP
.nf

.B
create(This, Parent, Options :: [Option]) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxStaticLine()
.br
Parent = wxWindow:wxWindow()
.br
Option = 
.br
    {id, integer()} |
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Creates the static line for two-step construction\&.
.LP
See \fInew/2\fR\& for further details\&.
.RE
.LP
.nf

.B
isVertical(This) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxStaticLine()
.br
.RE
.RE
.RS
.LP
Returns true if the line is vertical, false if horizontal\&.
.RE
.LP
.nf

.B
getDefaultSize() -> integer()
.br
.fi
.br
.RS
.LP
This static function returns the size which will be given to the smaller dimension of the static line, i\&.e\&.
.LP
its height for a horizontal line or its width for a vertical one\&.
.RE
.LP
.nf

.B
destroy(This :: wxStaticLine()) -> ok
.br
.fi
.br
.RS
.LP
Destroys the object\&.
.RE