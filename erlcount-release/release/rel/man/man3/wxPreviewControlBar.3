.TH wxPreviewControlBar 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxPreviewControlBar \- Functions for wxPreviewControlBar class
.SH DESCRIPTION
.LP
This is the default implementation of the preview control bar, a panel with buttons and a zoom control\&.
.LP
You can derive a new class from this and override some or all member functions to change the behaviour and appearance; or you can leave it as it is\&.
.LP
See: \fIwxPreviewFrame\fR\&, \fIwxPreviewCanvas\fR\&, \fIwxPrintPreview\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxPanel\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxPreviewControlBar
.SH DATA TYPES
.nf

\fBwxPreviewControlBar()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new(Preview, Buttons, Parent) -> wxPreviewControlBar()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Preview = wxPrintPreview:wxPrintPreview()
.br
Buttons = integer()
.br
Parent = wxWindow:wxWindow()
.br
.RE
.RE
.LP
.nf

.B
new(Preview, Buttons, Parent, Options :: [Option]) ->
.B
       wxPreviewControlBar()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Preview = wxPrintPreview:wxPrintPreview()
.br
Buttons = integer()
.br
Parent = wxWindow:wxWindow()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Constructor\&.
.LP
The \fIbuttons\fR\& parameter may be a combination of the following, using the bitwise \&'or\&' operator:
.RE
.LP
.nf

.B
destroy(This :: wxPreviewControlBar()) -> ok
.br
.fi
.br
.RS
.LP
Destructor\&.
.RE
.LP
.nf

.B
createButtons(This) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxPreviewControlBar()
.br
.RE
.RE
.RS
.LP
Creates buttons, according to value of the button style flags\&.
.RE
.LP
.nf

.B
getPrintPreview(This) -> wxPrintPreview:wxPrintPreview()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxPreviewControlBar()
.br
.RE
.RE
.RS
.LP
Gets the print preview object associated with the control bar\&.
.RE
.LP
.nf

.B
getZoomControl(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxPreviewControlBar()
.br
.RE
.RE
.RS
.LP
Gets the current zoom setting in percent\&.
.RE
.LP
.nf

.B
setZoomControl(This, Percent) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxPreviewControlBar()
.br
Percent = integer()
.br
.RE
.RE
.RS
.LP
Sets the zoom control\&.
.RE