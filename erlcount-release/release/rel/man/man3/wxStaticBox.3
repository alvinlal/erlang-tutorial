.TH wxStaticBox 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxStaticBox \- Functions for wxStaticBox class
.SH DESCRIPTION
.LP
A static box is a rectangle drawn around other windows to denote a logical grouping of items\&.
.LP
Note that while the previous versions required that windows appearing inside a static box be created as its siblings (i\&.e\&. use the same parent as the static box itself), since wxWidgets 2\&.9\&.1 it is also possible to create them as children of \fIwxStaticBox\fR\& itself and you are actually encouraged to do it like this if compatibility with the previous versions is not important\&.
.LP
So the new recommended way to create static box is:
.LP
While the compatible - and now deprecated - way is
.LP
Also note that there is a specialized \fIwxSizer\fR\& class (\fIwxStaticBoxSizer\fR\&) which can be used as an easier way to pack items into a static box\&.
.LP
See: \fIwxStaticText\fR\&, \fIwxStaticBoxSizer\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxControl\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxStaticBox
.SH DATA TYPES
.nf

\fBwxStaticBox()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxStaticBox()
.br
.fi
.br
.RS
.LP
Default constructor\&.
.RE
.LP
.nf

.B
new(Parent, Id, Label) -> wxStaticBox()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
.RE
.RE
.LP
.nf

.B
new(Parent, Id, Label, Options :: [Option]) -> wxStaticBox()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Constructor, creating and showing a static box\&.
.LP
See: \fIcreate/5\fR\& 
.RE
.LP
.nf

.B
destroy(This :: wxStaticBox()) -> ok
.br
.fi
.br
.RS
.LP
Constructor for a static box using the given window as label\&.
.LP
This constructor takes a pointer to an arbitrary window (although usually a \fIwxCheckBox\fR\& or a \fIwxRadioButton\fR\&) instead of just the usual text label and puts this window at the top of the box at the place where the label would be shown\&.
.LP
The \fIlabel\fR\& window must be a non-null, fully created window and will become a child of this \fIwxStaticBox\fR\&, i\&.e\&. it will be owned by this control and will be deleted when the \fIwxStaticBox\fR\& itself is deleted\&.
.LP
An example of creating a \fIwxStaticBox\fR\& with window as a label:
.LP
Currently this constructor is only available in wxGTK and wxMSW, use \fIwxHAS_WINDOW_LABEL_IN_STATIC_BOX\fR\& to check whether it can be used at compile-time\&.
.LP
Since: 3\&.1\&.1 Destructor, destroying the group box\&.
.RE
.LP
.nf

.B
create(This, Parent, Id, Label) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxStaticBox()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
.RE
.RE
.LP
.nf

.B
create(This, Parent, Id, Label, Options :: [Option]) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxStaticBox()
.br
Parent = wxWindow:wxWindow()
.br
Id = integer()
.br
Label = unicode:chardata()
.br
Option = 
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Creates the static box for two-step construction\&.
.LP
See \fInew/4\fR\& for further details\&.
.RE