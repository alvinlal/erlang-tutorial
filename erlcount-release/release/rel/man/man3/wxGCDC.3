.TH wxGCDC 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxGCDC \- Functions for wxGCDC class
.SH DESCRIPTION
.LP
\fIwxGCDC\fR\& is a device context that draws on a \fIwxGraphicsContext\fR\&\&.
.LP
\fIwxGCDC\fR\& does its best to implement \fIwxDC\fR\& API, but the following features are not (fully) implemented because \fIwxGraphicsContext\fR\& doesn\&'t support them:
.LP
See: \fIwxDC\fR\&, \fIwxGraphicsContext\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxDC\fR\&
.LP
wxWidgets docs: wxGCDC
.SH DATA TYPES
.nf

\fBwxGCDC()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxGCDC()
.br
.fi
.br
.RS
.RE
.LP
.nf

.B
new(WindowDC) -> wxGCDC()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
WindowDC = 
.br
    wxWindowDC:wxWindowDC() |
.br
    wxMemoryDC:wxMemoryDC() |
.br
    wxGraphicsContext:wxGraphicsContext()
.br
.RE
.RE
.RS
.LP
Constructs a \fIwxGCDC\fR\& from a \fIwxWindowDC\fR\&\&.
.RE
.LP
.nf

.B
destroy(This :: wxGCDC()) -> ok
.br
.fi
.br
.RS
.RE
.LP
.nf

.B
getGraphicsContext(This) -> wxGraphicsContext:wxGraphicsContext()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGCDC()
.br
.RE
.RE
.RS
.LP
Retrieves associated \fIwxGraphicsContext\fR\&\&.
.RE
.LP
.nf

.B
setGraphicsContext(This, Context) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxGCDC()
.br
Context = wxGraphicsContext:wxGraphicsContext()
.br
.RE
.RE
.RS
.LP
Set the graphics context to be used for this \fIwxGCDC\fR\&\&.
.LP
Note that this object takes ownership of \fIcontext\fR\& and will delete it when it is destroyed or when \fIsetGraphicsContext/2\fR\& is called again\&.
.LP
Also, unlike the constructor taking \fIwxGraphicsContext\fR\&, this method will reapply the current font, pen and brush, so that this object continues to use them, if they had been changed before (which is never the case when constructing \fIwxGCDC\fR\& directly from \fIwxGraphicsContext\fR\&)\&.
.RE