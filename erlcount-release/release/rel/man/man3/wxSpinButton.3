.TH wxSpinButton 3 "wx 2.2.2" "wxWidgets team." "Erlang Module Definition"
.SH NAME
wxSpinButton \- Functions for wxSpinButton class
.SH DESCRIPTION
.LP
A \fIwxSpinButton\fR\& has two small up and down (or left and right) arrow buttons\&.
.LP
It is often used next to a text control for increment and decrementing a value\&. Portable programs should try to use \fIwxSpinCtrl\fR\& instead as \fIwxSpinButton\fR\& is not implemented for all platforms but \fIwxSpinCtrl\fR\& is as it degenerates to a simple \fIwxTextCtrl\fR\& on such platforms\&.
.LP
Note: the range supported by this control (and \fIwxSpinCtrl\fR\&) depends on the platform but is at least \fI-0x8000\fR\& to \fI0x7fff\fR\&\&. Under GTK and Win32 with sufficiently new version of \fIcomctrl32\&.dll\fR\& (at least 4\&.71 is required, 5\&.80 is recommended) the full 32 bit range is supported\&.
.LP
Styles
.LP
This class supports the following styles:
.LP
See: \fIwxSpinCtrl\fR\& 
.LP
This class is derived (and can use functions) from: \fIwxControl\fR\& \fIwxWindow\fR\& \fIwxEvtHandler\fR\&
.LP
wxWidgets docs: wxSpinButton
.SH "EVENTS"

.LP
Event types emitted from this class: \fIspin\fR\&, \fIspin_up\fR\&, \fIspin_down\fR\&
.SH DATA TYPES
.nf

\fBwxSpinButton()\fR\& = wx:wx_object()
.br
.fi
.SH EXPORTS
.LP
.nf

.B
new() -> wxSpinButton()
.br
.fi
.br
.RS
.LP
Default constructor\&.
.RE
.LP
.nf

.B
new(Parent) -> wxSpinButton()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
.RE
.RE
.LP
.nf

.B
new(Parent, Options :: [Option]) -> wxSpinButton()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
Parent = wxWindow:wxWindow()
.br
Option = 
.br
    {id, integer()} |
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Constructor, creating and showing a spin button\&.
.LP
See: \fIcreate/3\fR\& 
.RE
.LP
.nf

.B
destroy(This :: wxSpinButton()) -> ok
.br
.fi
.br
.RS
.LP
Destructor, destroys the spin button control\&.
.RE
.LP
.nf

.B
create(This, Parent) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
Parent = wxWindow:wxWindow()
.br
.RE
.RE
.LP
.nf

.B
create(This, Parent, Options :: [Option]) -> boolean()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
Parent = wxWindow:wxWindow()
.br
Option = 
.br
    {id, integer()} |
.br
    {pos, {X :: integer(), Y :: integer()}} |
.br
    {size, {W :: integer(), H :: integer()}} |
.br
    {style, integer()}
.br
.RE
.RE
.RS
.LP
Scrollbar creation function called by the spin button constructor\&.
.LP
See \fInew/2\fR\& for details\&.
.RE
.LP
.nf

.B
getMax(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
.RE
.RE
.RS
.LP
Returns the maximum permissible value\&.
.LP
See: \fIsetRange/3\fR\& 
.RE
.LP
.nf

.B
getMin(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
.RE
.RE
.RS
.LP
Returns the minimum permissible value\&.
.LP
See: \fIsetRange/3\fR\& 
.RE
.LP
.nf

.B
getValue(This) -> integer()
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
.RE
.RE
.RS
.LP
Returns the current spin button value\&.
.LP
See: \fIsetValue/2\fR\& 
.RE
.LP
.nf

.B
setRange(This, Min, Max) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
Min = Max = integer()
.br
.RE
.RE
.RS
.LP
Sets the range of the spin button\&.
.LP
In portable code, \fImin\fR\& should be less than or equal to \fImax\fR\&\&. In wxMSW it is possible to specify minimum greater than maximum and the native control supports the same range as if they were reversed, but swaps the meaning of up and down arrows, however this dubious feature is not supported on other platforms\&.
.LP
See: \fIgetMin/1\fR\&, \fIgetMax/1\fR\& 
.RE
.LP
.nf

.B
setValue(This, Value) -> ok
.br
.fi
.br
.RS
.LP
Types:

.RS 3
This = wxSpinButton()
.br
Value = integer()
.br
.RE
.RE
.RS
.LP
Sets the value of the spin button\&.
.RE